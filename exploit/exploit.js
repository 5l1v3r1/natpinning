
var gMyIP="";
var gResultTable_StartHTML="";
function getURIParam(paramName){
	var sResult = "";
	var sURI = document.URL.toString();
	if(sURI.indexOf("?")>0){
		var sParamString = sURI.split("?")[1];
		var aParamData = sParamString.split("&");
		for (i=0;i<aParamData.length;i++){
			var aParam = aParamData[i].split("=");
			if (aParam[0]==paramName && aParam[1].length>0){
				sResult = unescape(aParam[1]);
			}
		}
	}
	return sResult;
}
function setPageValues(){
	gClientId = getURIParam("ci");
	gResultTable_StartHTML = document.getElementById("tblTestResultsBody").innerHTML;
	if (gClientId.length>0){
		loadSWF();
	}
	//set base ip
	gMyIP = getURIParam("ip");
	if (isValidIp4(gMyIP)==true){
		document.getElementById("txtIP").value=gMyIP;
	}else{
		gMyIP="";
	}
	//update proto selection box
	var aProto = getURIParam("proto").split(",");
	var sProtoHTML ="";
	for (i=0;i<aProto.length;i++){
		if (gProtocols.indexOf(aProto[i])!=-1){ //gprotocols is imported from tools.js
			sProtoHTML += "<option value='"+ aProto[i] +"'>" + aProto[i] + "</option>\n"
		}
	}
	document.getElementById("lstProto").innerHTML = sProtoHTML;
	loadTests();
	setInterval(loadTests,10000);
}

function cmdAdd(){
	document.getElementById("divError").innerHTML=""; //Clear existing errors.
	if (gClientId==""){
		document.getElementById("divError").innerHTML="No client id found.";
		return 0
	}

	var e = document.getElementById("lstProto");
	var sProto=e.options[e.selectedIndex].value;
	var sIP=document.getElementById("txtIP").value;
	var sPort=document.getElementById("txtPort").value;


	if (isValidIp4(sIP)){
		if (isValidPort(sPort)){
			if (gProtocols.indexOf(sProto)!=-1 || sProto=="ALL"){
				addTest(sProto,sIP,sPort);
				loadTests()
			}else{
				document.getElementById("divError").innerHTML="Invalid Protocol specified.";
			} 
		}else{
			document.getElementById("divError").innerHTML="Invalid Port specified.";
		}
	}else{
		document.getElementById("divError").innerHTML="Invalid IP address specified.";
	}
}

function loadSWF(){
	try{
		var proto = "cmd";
		var server = document.location.hostname;//defaulting to same host
		var callbackip = "";
		var callbackport = "";
			//where dragons be
			var swfEL = httpreq(gCmdURL + "?cmd=GENFLASH&ci="+gClientId+"&server="+getHostAndPortFromURL());
			document.getElementById("SWFContainer").innerHTML=swfEL;
			return true;
	}catch(err){
			return false;
	}
}

function loadTests(){
	if (gClientId.length>0){
		var testdata = httpreq(gCmdURL + "?cmd=LIST&ci="+gClientId);
		var arrTests = testdata.split("\n");
		var sHTML ="<table id='tblTestResults' class='tblResults'><tbody id='tblTestResultsBody'>";
		sHTML = sHTML + gResultTable_StartHTML;
		if (arrTests.length>0){
			for (i=0;i<arrTests.length-1;i++){
				var test = arrTests[i].split("|");
				//todo check array length here when final version is set
				var sId = test[0];
				var sStatus = test[1];
				if(sStatus=="False"){
					var sPubPort = "--";
				}else{
					var sPubPort = "";
				}
				var sProto = test[2];
				var sResult = test[3];
				var sPubIp = test[4];
				var sPrivIp = test[5];
				var sPubPort = test[6];
				var sPrivPort = test[7];
				var sType ="benchmark";
				if (sPrivPort < 1024){
					sType="Reserved port";
				}else{
					if (sPrivIp != gMyIP){
						sType="3rd host";
					}
				}
				sHTML +="<tr id='"+sId+"'>";
				sHTML += "<td>" + sProto + "</td>";
				sHTML += "<td>" + sType + "</td>";
				sHTML += "<td>" + sResult + "</td>";
				sHTML += "<td>" + sPubIp + "</td>";
				sHTML += "<td>" + sPubPort + "</td>";
				sHTML += "<td>" + sPrivIp + "</td>";
				sHTML += "<td>" + sPrivPort + "</td>";
				sHTML += "</tr>\n";
			}
		}
		sHTML = sHTML + "</tbody></table>";
		document.getElementById("divResults").innerHTML = sHTML
	}
}
