/* 						GLOBAL VARIABLES				 */
var gCurrStep=1;
var gMyIP="";
var gClientId="";
var gTests=[];
var gProtocols=["FTP","IRC","SIP","H225"];
var gRandPort = 65000;
//function httpreq()	=>	tools.js



function getNextPort(){
	gRandPort = gRandPort +1
	return gRandPort.toString()
}
function clTest(test_id,proto,ip,port){
	this.TEST_ID = test_id;
	this.PROTO = proto;
	this.PRIV_IP = ip;
	this.PRIV_PORT= port;
	this.STATUS = "NEW";
	this.RESULT="";
}

var gCmdURL=getProtoFromURL() + "://" + getHostAndPortFromURL()+"/cli"; //both functions defined in tools.js

function regclient(ip){
	return httpreq(gCmdURL + "?REG_"+gMyIP); 
	//returns client id or empty string on error
}
function updateTest(gTest){
	if (gTest.STATUS!="DONE"){
		var test_result = httpreq(gCmdURL + "?STATUS_" + gTest.TEST_ID);
		if (test_result!="0" && test_result != "ERROR"){
			var test_result_parts = test_result.split(" ");
			gTest.STATUS= test_result_parts[0]
			gTest.RESULT= test_result_parts[1]
		}
	}
}
function addTest(proto,ip,port){
	/*creates new test on server
		and uses retruned test id to initiate new clTest object and append it to gTests array
	*/
	var testid = httpreq(gCmdURL + "?ADD_"+gClientId+"_"+proto+"_"+ip+"_"+port);
	var loTest = new clTest(testid,proto,ip,port);
	gTests.push(loTest);
}
