var currClient ="";
function getContent(page){
	xmlhttp=new XMLHttpRequest();
	xmlhttp.open("GET",page,false);
	xmlhttp.send();
	return xmlhttp.responseText;
}
function UpdateClients(){
	var clients = getContent("xClients");
	var data ="";
	if (clients==""){
		var url = document.URL;
		url = url.replace("admin.html","exploit.html?ci=PRIVATE_IP_Of_CLIENT");
		data="<tr><td colspan=4>No clients found..."
		data+="<br>To connect a client, let them naviguate to "+url;
		data+="</td></tr>";
	}else{
		data = DataToTable(clients,"|","tblClients");
	}
	var tblClients = document.getElementById("tblClients");
	tblClients.innerHTML = tblClientsHeader + data;
	}
function UpdateClientResults(){
	var results = getContent("xResults?"+window.currClient);
	var data ="";
	if (results==""){
		data = "<tr><td colspan=6>No tests found for this client yet.</td></tr>";
	}else{
		data=DataToTable(results,"|","tblResults");
	}
	var tblResults = document.getElementById("tblResults");
	tblResults.innerHTML = tblResultsHeader + data;
	if (document.getElementById("btnGo").disabled==true && String(currClient)!=""){
		document.getElementById("btnGo").disabled=false;
	}
	
}
function setTestDefaults(){
	var privip = document.getElementById("tblClients_row"+String(currClient)+"_col2");
	var txtIp = document.getElementById("test_privip");
	txtIp.value=privip.innerHTML;
	document.getElementById("btnGo").disabled=false;	
	document.getElementById("test_privport").focus();
}
function handle_clientClick(rowID){
	window.currClient=rowID;
	setTestDefaults();
	UpdateClientResults()
	setInterval("UpdateClientResults()",3000);
}
function runTest(){
	if (String(window.currClient)!=""){
		if (document.getElementById("test_privip").value==""){
			alert("You need to fill in a private ip first!");
			document.getElementById("test_privip").focus();
			return 0;
		}
		if (document.getElementById("test_privport").value==""){
			alert("You need to fill in port first!");
			document.getElementById("test_privport").focus();
			return 0;
		}else{
			var portval = document.getElementById("test_privport").value;
			if (portval <0 || portval>65535 || isFinite(portval)==false){
				alert("Invalid port specification (1-65535)!");
				document.getElementById("test_privport").focus();
				return 0;
			}
		}
		//if we get here, all is well
		var selectType = document.getElementById("test_proto");
		var sSelect = selectType.options[selectType.selectedIndex].value;
		document.getElementById("btnGo").disabled=true;
		getContent("xTest?"+String(currClient) + "&"+sSelect+"&" + document.getElementById("test_privip").value +"&"+document.getElementById("test_privport").value);
	}else{
		alert("Select a client first!");
		return 0;
	}
}
function DataToTable(data, splitter,tblName){
	if (data.length==0){
		return "";
	}else{
		var result ="";
		arrRows = data.split("\n");
		for (var i=0;i<arrRows.length;i++){
			result = result + "<tr id='"+tblName+"_row_"+String(i)+"'>" 
			var arrColls = arrRows[i].split(splitter);
			for (var y=0;y<arrColls.length;y++){
				result = result + "<td id='"+tblName+"_row"+String(i)+"_col"+String(y)+ "'>"
				result = result + arrColls[y];
				result = result + "</td>"
			}
			result = result + "</tr>\n" 
		}
		return result
	}
}
